### YamlMime:ManagedReference
items:
- uid: LimeVideoSDKQuickSync.BenchmarkTimer
  commentId: T:LimeVideoSDKQuickSync.BenchmarkTimer
  id: BenchmarkTimer
  parent: LimeVideoSDKQuickSync
  children:
  - LimeVideoSDKQuickSync.BenchmarkTimer.Start
  - LimeVideoSDKQuickSync.BenchmarkTimer.StopAndReport(System.Int64,System.Int64,System.Int64)
  langs:
  - csharp
  - vb
  name: BenchmarkTimer
  nameWithType: BenchmarkTimer
  fullName: LimeVideoSDKQuickSync.BenchmarkTimer
  type: Class
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/BenchmarkHelper.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: BenchmarkTimer
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/BenchmarkHelper.cs
    startLine: 21
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\nFor benchmarking. Contains a timer, and prints metrics after stopping.\n"
  example: []
  syntax:
    content: public class BenchmarkTimer
    content.vb: Public Class BenchmarkTimer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LimeVideoSDKQuickSync.BenchmarkTimer.Start
  commentId: M:LimeVideoSDKQuickSync.BenchmarkTimer.Start
  id: Start
  parent: LimeVideoSDKQuickSync.BenchmarkTimer
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: BenchmarkTimer.Start()
  fullName: LimeVideoSDKQuickSync.BenchmarkTimer.Start()
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/BenchmarkHelper.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Start
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/BenchmarkHelper.cs
    startLine: 30
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\nStarts timer\n"
  example: []
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: LimeVideoSDKQuickSync.BenchmarkTimer.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LimeVideoSDKQuickSync.BenchmarkTimer.StopAndReport(System.Int64,System.Int64,System.Int64)
  commentId: M:LimeVideoSDKQuickSync.BenchmarkTimer.StopAndReport(System.Int64,System.Int64,System.Int64)
  id: StopAndReport(System.Int64,System.Int64,System.Int64)
  parent: LimeVideoSDKQuickSync.BenchmarkTimer
  langs:
  - csharp
  - vb
  name: StopAndReport(Int64, Int64, Int64)
  nameWithType: BenchmarkTimer.StopAndReport(Int64, Int64, Int64)
  fullName: LimeVideoSDKQuickSync.BenchmarkTimer.StopAndReport(System.Int64, System.Int64, System.Int64)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/BenchmarkHelper.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: StopAndReport
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/BenchmarkHelper.cs
    startLine: 41
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Stops gimer and writes calculated statistics to Console.
  example: []
  syntax:
    content: public void StopAndReport(long numFrames, long bytesin, long bytesout)
    content.vb: Public Sub StopAndReport(numFrames As Long, bytesin As Long, bytesout As Long)
    parameters:
    - id: numFrames
      type: System.Int64
      description: The number frames.
    - id: bytesin
      type: System.Int64
      description: count of bytes read.
    - id: bytesout
      type: System.Int64
      description: count of bytes written.
  overload: LimeVideoSDKQuickSync.BenchmarkTimer.StopAndReport*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: LimeVideoSDKQuickSync
  commentId: N:LimeVideoSDKQuickSync
  isExternal: false
  name: LimeVideoSDKQuickSync
  nameWithType: LimeVideoSDKQuickSync
  fullName: LimeVideoSDKQuickSync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: LimeVideoSDKQuickSync.BenchmarkTimer.Start*
  commentId: Overload:LimeVideoSDKQuickSync.BenchmarkTimer.Start
  isExternal: false
  name: Start
  nameWithType: BenchmarkTimer.Start
  fullName: LimeVideoSDKQuickSync.BenchmarkTimer.Start
- uid: LimeVideoSDKQuickSync.BenchmarkTimer.StopAndReport*
  commentId: Overload:LimeVideoSDKQuickSync.BenchmarkTimer.StopAndReport
  isExternal: false
  name: StopAndReport
  nameWithType: BenchmarkTimer.StopAndReport
  fullName: LimeVideoSDKQuickSync.BenchmarkTimer.StopAndReport
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
