### YamlMime:ManagedReference
items:
- uid: LimeVideoSDKQuickSync.NV12Resizer
  commentId: T:LimeVideoSDKQuickSync.NV12Resizer
  id: NV12Resizer
  parent: LimeVideoSDKQuickSync
  children:
  - LimeVideoSDKQuickSync.NV12Resizer.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - LimeVideoSDKQuickSync.NV12Resizer.Convert(System.Byte[])
  - LimeVideoSDKQuickSync.NV12Resizer.outbuf
  - LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence(System.Collections.Generic.IEnumerable{System.Byte[]},System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: NV12Resizer
  nameWithType: NV12Resizer
  fullName: LimeVideoSDKQuickSync.NV12Resizer
  type: Class
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: NV12Resizer
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
    startLine: 196
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\nThis class is for resizing NV12 frames\n"
  example: []
  syntax:
    content: public class NV12Resizer
    content.vb: Public Class NV12Resizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LimeVideoSDKQuickSync.NV12Resizer.outbuf
  commentId: F:LimeVideoSDKQuickSync.NV12Resizer.outbuf
  id: outbuf
  parent: LimeVideoSDKQuickSync.NV12Resizer
  langs:
  - csharp
  - vb
  name: outbuf
  nameWithType: NV12Resizer.outbuf
  fullName: LimeVideoSDKQuickSync.NV12Resizer.outbuf
  type: Field
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: outbuf
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
    startLine: 202
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\nWhere you get the resized output frame from\n"
  example: []
  syntax:
    content: public byte[] outbuf
    content.vb: Public outbuf As Byte()
    return:
      type: System.Byte[]
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LimeVideoSDKQuickSync.NV12Resizer.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:LimeVideoSDKQuickSync.NV12Resizer.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: LimeVideoSDKQuickSync.NV12Resizer
  langs:
  - csharp
  - vb
  name: NV12Resizer(Int32, Int32, Int32, Int32)
  nameWithType: NV12Resizer.NV12Resizer(Int32, Int32, Int32, Int32)
  fullName: LimeVideoSDKQuickSync.NV12Resizer.NV12Resizer(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: .ctor
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
    startLine: 220
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public NV12Resizer(int inwidth, int inheight, int outwidth, int outheight)
    content.vb: Public Sub New(inwidth As Integer, inheight As Integer, outwidth As Integer, outheight As Integer)
    parameters:
    - id: inwidth
      type: System.Int32
      description: ''
    - id: inheight
      type: System.Int32
      description: ''
    - id: outwidth
      type: System.Int32
      description: ''
    - id: outheight
      type: System.Int32
      description: ''
  overload: LimeVideoSDKQuickSync.NV12Resizer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LimeVideoSDKQuickSync.NV12Resizer.Convert(System.Byte[])
  commentId: M:LimeVideoSDKQuickSync.NV12Resizer.Convert(System.Byte[])
  id: Convert(System.Byte[])
  parent: LimeVideoSDKQuickSync.NV12Resizer
  langs:
  - csharp
  - vb
  name: Convert(Byte[])
  nameWithType: NV12Resizer.Convert(Byte[])
  fullName: LimeVideoSDKQuickSync.NV12Resizer.Convert(System.Byte[])
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Convert
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
    startLine: 282
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\nConvert a frame. Find the output in the member 'outputbuf'.\n"
  example: []
  syntax:
    content: public void Convert(byte[] nv12inbuf)
    content.vb: Public Sub Convert(nv12inbuf As Byte())
    parameters:
    - id: nv12inbuf
      type: System.Byte[]
      description: Input frame. Must be width*height*3/2 bytes long.
  overload: LimeVideoSDKQuickSync.NV12Resizer.Convert*
  nameWithType.vb: NV12Resizer.Convert(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LimeVideoSDKQuickSync.NV12Resizer.Convert(System.Byte())
  name.vb: Convert(Byte())
- uid: LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence(System.Collections.Generic.IEnumerable{System.Byte[]},System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence(System.Collections.Generic.IEnumerable{System.Byte[]},System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: ResizeNV12FrameSequence(System.Collections.Generic.IEnumerable{System.Byte[]},System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: LimeVideoSDKQuickSync.NV12Resizer
  langs:
  - csharp
  - vb
  name: ResizeNV12FrameSequence(IEnumerable<Byte[]>, Int32, Int32, Int32, Int32, Boolean)
  nameWithType: NV12Resizer.ResizeNV12FrameSequence(IEnumerable<Byte[]>, Int32, Int32, Int32, Int32, Boolean)
  fullName: LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence(System.Collections.Generic.IEnumerable<System.Byte[]>, System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: ResizeNV12FrameSequence
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/NV12Resizer.cs
    startLine: 316
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\nReturns a sequence of resized NV12 frames\n"
  example: []
  syntax:
    content: public static IEnumerable<byte[]> ResizeNV12FrameSequence(IEnumerable<byte[]> frames, int inWidth, int inHeight, int outWidth, int outHeight, bool reuseOutputBuffer = true)
    content.vb: Public Shared Function ResizeNV12FrameSequence(frames As IEnumerable(Of Byte()), inWidth As Integer, inHeight As Integer, outWidth As Integer, outHeight As Integer, reuseOutputBuffer As Boolean = True) As IEnumerable(Of Byte())
    parameters:
    - id: frames
      type: System.Collections.Generic.IEnumerable{System.Byte[]}
      description: Input frames
    - id: inWidth
      type: System.Int32
      description: ''
    - id: inHeight
      type: System.Int32
      description: ''
    - id: outWidth
      type: System.Int32
      description: ''
    - id: outHeight
      type: System.Int32
      description: ''
    - id: reuseOutputBuffer
      type: System.Boolean
      description: When true, you will get the same array on each return, when false you get a new array on each return
    return:
      type: System.Collections.Generic.IEnumerable{System.Byte[]}
      description: Sequence of resized frames
  overload: LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence*
  nameWithType.vb: NV12Resizer.ResizeNV12FrameSequence(IEnumerable(Of Byte()), Int32, Int32, Int32, Int32, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence(System.Collections.Generic.IEnumerable(Of System.Byte()), System.Int32, System.Int32, System.Int32, System.Int32, System.Boolean)
  name.vb: ResizeNV12FrameSequence(IEnumerable(Of Byte()), Int32, Int32, Int32, Int32, Boolean)
references:
- uid: LimeVideoSDKQuickSync
  commentId: N:LimeVideoSDKQuickSync
  isExternal: false
  name: LimeVideoSDKQuickSync
  nameWithType: LimeVideoSDKQuickSync
  fullName: LimeVideoSDKQuickSync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: LimeVideoSDKQuickSync.NV12Resizer.#ctor*
  commentId: Overload:LimeVideoSDKQuickSync.NV12Resizer.#ctor
  isExternal: false
  name: NV12Resizer
  nameWithType: NV12Resizer.NV12Resizer
  fullName: LimeVideoSDKQuickSync.NV12Resizer.NV12Resizer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: LimeVideoSDKQuickSync.NV12Resizer.Convert*
  commentId: Overload:LimeVideoSDKQuickSync.NV12Resizer.Convert
  isExternal: false
  name: Convert
  nameWithType: NV12Resizer.Convert
  fullName: LimeVideoSDKQuickSync.NV12Resizer.Convert
- uid: LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence*
  commentId: Overload:LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence
  isExternal: false
  name: ResizeNV12FrameSequence
  nameWithType: NV12Resizer.ResizeNV12FrameSequence
  fullName: LimeVideoSDKQuickSync.NV12Resizer.ResizeNV12FrameSequence
- uid: System.Collections.Generic.IEnumerable{System.Byte[]}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Byte[]>
  nameWithType: IEnumerable<Byte[]>
  fullName: System.Collections.Generic.IEnumerable<System.Byte[]>
  nameWithType.vb: IEnumerable(Of Byte())
  fullname.vb: System.Collections.Generic.IEnumerable(Of System.Byte())
  name.vb: IEnumerable(Of Byte())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
