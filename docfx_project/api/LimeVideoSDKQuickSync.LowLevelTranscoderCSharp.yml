### YamlMime:ManagedReference
items:
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  commentId: T:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  id: LowLevelTranscoderCSharp
  parent: LimeVideoSDKQuickSync
  children:
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.#ctor(LimeVideoSDKQuickSync.TranscoderConfiguration,LimeVideoSDKQuickSync.mfxIMPL,System.Boolean)
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferFreeCount
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferSize
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose(System.Boolean)
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Finalize
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1(LimeVideoSDKQuickSync.BitStreamChunk@)
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2(LimeVideoSDKQuickSync.BitStreamChunk@)
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3(LimeVideoSDKQuickSync.BitStreamChunk@)
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4(LimeVideoSDKQuickSync.BitStreamChunk@)
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame(LimeVideoSDKQuickSync.BitStreamChunk@)
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream(System.Byte[],System.Int32,System.Int32)
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.session
  - LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.warnings
  langs:
  - csharp
  - vb
  name: LowLevelTranscoderCSharp
  nameWithType: LowLevelTranscoderCSharp
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  type: Class
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: LowLevelTranscoderCSharp
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 25
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\nThis is the low level Transcoder.\nThe StreamTranscoder should almost always be used instead.\n"
  example: []
  syntax:
    content: 'public class LowLevelTranscoderCSharp : IDisposable'
    content.vb: >-
      Public Class LowLevelTranscoderCSharp
          Implements IDisposable
  seealso:
  - linkId: LimeVideoSDKQuickSync.StreamTranscoder
    commentId: T:LimeVideoSDKQuickSync.StreamTranscoder
  - linkId: System.IDisposable
    commentId: T:System.IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.session
  commentId: F:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.session
  id: session
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: session
  nameWithType: LowLevelTranscoderCSharp.session
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.session
  type: Field
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: session
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 28
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: The session
  example: []
  syntax:
    content: public mfxSession session
    content.vb: Public session As mfxSession
    return:
      type: LimeVideoSDKQuickSync.mfxSession
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.warnings
  commentId: F:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.warnings
  id: warnings
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: warnings
  nameWithType: LowLevelTranscoderCSharp.warnings
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.warnings
  type: Field
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: warnings
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 32
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: The warnings
  example: []
  syntax:
    content: public Dictionary<string, mfxStatus> warnings
    content.vb: Public warnings As Dictionary(Of String, mfxStatus)
    return:
      type: System.Collections.Generic.Dictionary{System.String,LimeVideoSDKQuickSync.mfxStatus}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.#ctor(LimeVideoSDKQuickSync.TranscoderConfiguration,LimeVideoSDKQuickSync.mfxIMPL,System.Boolean)
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.#ctor(LimeVideoSDKQuickSync.TranscoderConfiguration,LimeVideoSDKQuickSync.mfxIMPL,System.Boolean)
  id: '#ctor(LimeVideoSDKQuickSync.TranscoderConfiguration,LimeVideoSDKQuickSync.mfxIMPL,System.Boolean)'
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: LowLevelTranscoderCSharp(TranscoderConfiguration, mfxIMPL, Boolean)
  nameWithType: LowLevelTranscoderCSharp.LowLevelTranscoderCSharp(TranscoderConfiguration, mfxIMPL, Boolean)
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.LowLevelTranscoderCSharp(LimeVideoSDKQuickSync.TranscoderConfiguration, LimeVideoSDKQuickSync.mfxIMPL, System.Boolean)
  type: Constructor
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: .ctor
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 96
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Initializes a new instance of the <xref href="LimeVideoSDKQuickSync.LowLevelTranscoderCSharp" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public LowLevelTranscoderCSharp(TranscoderConfiguration config, mfxIMPL impl = mfxIMPL.MFX_IMPL_AUTO, bool forceSystemMemory = false)
    content.vb: Public Sub New(config As TranscoderConfiguration, impl As mfxIMPL = mfxIMPL.MFX_IMPL_AUTO, forceSystemMemory As Boolean = False)
    parameters:
    - id: config
      type: LimeVideoSDKQuickSync.TranscoderConfiguration
      description: The configuration.
    - id: impl
      type: LimeVideoSDKQuickSync.mfxIMPL
      description: The implementation.
    - id: forceSystemMemory
      type: System.Boolean
      description: if set to <code>true</code> [force system memory].
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferFreeCount
  commentId: P:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferFreeCount
  id: BufferFreeCount
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: BufferFreeCount
  nameWithType: LowLevelTranscoderCSharp.BufferFreeCount
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferFreeCount
  type: Property
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: BufferFreeCount
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 360
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Gets the buffer free count.
  example: []
  syntax:
    content: public int BufferFreeCount { get; }
    content.vb: Public ReadOnly Property BufferFreeCount As Integer
    parameters: []
    return:
      type: System.Int32
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferFreeCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferSize
  commentId: P:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferSize
  id: BufferSize
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: BufferSize
  nameWithType: LowLevelTranscoderCSharp.BufferSize
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferSize
  type: Property
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: BufferSize
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 362
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Gets the size of the buffer.
  example: []
  syntax:
    content: public int BufferSize { get; }
    content.vb: Public ReadOnly Property BufferSize As Integer
    parameters: []
    return:
      type: System.Int32
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferSize*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream(System.Byte[],System.Int32,System.Int32)
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream(System.Byte[],System.Int32,System.Int32)
  id: PutBitstream(System.Byte[],System.Int32,System.Int32)
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: PutBitstream(Byte[], Int32, Int32)
  nameWithType: LowLevelTranscoderCSharp.PutBitstream(Byte[], Int32, Int32)
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: PutBitstream
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 369
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Store bitstream for transcoding
  example: []
  syntax:
    content: public void PutBitstream(byte[] inbuf, int offset, int length)
    content.vb: Public Sub PutBitstream(inbuf As Byte(), offset As Integer, length As Integer)
    parameters:
    - id: inbuf
      type: System.Byte[]
      description: The inbuf.
    - id: offset
      type: System.Int32
      description: The offset.
    - id: length
      type: System.Int32
      description: The length.
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream*
  exceptions:
  - type: LimeVideoSDKQuickSync.LimeVideoSDKQuickSyncException
    commentId: T:LimeVideoSDKQuickSync.LimeVideoSDKQuickSyncException
    description: insufficient space in buffer
  nameWithType.vb: LowLevelTranscoderCSharp.PutBitstream(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream(System.Byte(), System.Int32, System.Int32)
  name.vb: PutBitstream(Byte(), Int32, Int32)
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame(LimeVideoSDKQuickSync.BitStreamChunk@)
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame(LimeVideoSDKQuickSync.BitStreamChunk@)
  id: GetNextFrame(LimeVideoSDKQuickSync.BitStreamChunk@)
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: GetNextFrame(ref BitStreamChunk)
  nameWithType: LowLevelTranscoderCSharp.GetNextFrame(ref BitStreamChunk)
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame(ref LimeVideoSDKQuickSync.BitStreamChunk)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: GetNextFrame
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 391
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Gets the next frame if available
  example: []
  syntax:
    content: public bool GetNextFrame(ref BitStreamChunk bitStreamChunk)
    content.vb: Public Function GetNextFrame(ByRef bitStreamChunk As BitStreamChunk) As Boolean
    parameters:
    - id: bitStreamChunk
      type: LimeVideoSDKQuickSync.BitStreamChunk
      description: The bit stream chunk.
    return:
      type: System.Boolean
      description: true if you should continue to call this method, false if you must go to the next phase.
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame*
  nameWithType.vb: LowLevelTranscoderCSharp.GetNextFrame(ByRef BitStreamChunk)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame(ByRef LimeVideoSDKQuickSync.BitStreamChunk)
  name.vb: GetNextFrame(ByRef BitStreamChunk)
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1(LimeVideoSDKQuickSync.BitStreamChunk@)
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1(LimeVideoSDKQuickSync.BitStreamChunk@)
  id: Flush1(LimeVideoSDKQuickSync.BitStreamChunk@)
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: Flush1(ref BitStreamChunk)
  nameWithType: LowLevelTranscoderCSharp.Flush1(ref BitStreamChunk)
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1(ref LimeVideoSDKQuickSync.BitStreamChunk)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Flush1
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 587
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Get frames during 1st stage of flushing
  example: []
  syntax:
    content: public bool Flush1(ref BitStreamChunk bitStreamChunk)
    content.vb: Public Function Flush1(ByRef bitStreamChunk As BitStreamChunk) As Boolean
    parameters:
    - id: bitStreamChunk
      type: LimeVideoSDKQuickSync.BitStreamChunk
      description: A single frame
    return:
      type: System.Boolean
      description: true if you should continue to call this method, false if you must go to the next stage.
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1*
  nameWithType.vb: LowLevelTranscoderCSharp.Flush1(ByRef BitStreamChunk)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1(ByRef LimeVideoSDKQuickSync.BitStreamChunk)
  name.vb: Flush1(ByRef BitStreamChunk)
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2(LimeVideoSDKQuickSync.BitStreamChunk@)
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2(LimeVideoSDKQuickSync.BitStreamChunk@)
  id: Flush2(LimeVideoSDKQuickSync.BitStreamChunk@)
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: Flush2(ref BitStreamChunk)
  nameWithType: LowLevelTranscoderCSharp.Flush2(ref BitStreamChunk)
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2(ref LimeVideoSDKQuickSync.BitStreamChunk)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Flush2
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 762
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Get frames during 2nd stage of flushing
  example: []
  syntax:
    content: public bool Flush2(ref BitStreamChunk bitStreamChunk)
    content.vb: Public Function Flush2(ByRef bitStreamChunk As BitStreamChunk) As Boolean
    parameters:
    - id: bitStreamChunk
      type: LimeVideoSDKQuickSync.BitStreamChunk
      description: A single frame
    return:
      type: System.Boolean
      description: true if you should continue to call this method, false if you must go to the next stage.
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2*
  nameWithType.vb: LowLevelTranscoderCSharp.Flush2(ByRef BitStreamChunk)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2(ByRef LimeVideoSDKQuickSync.BitStreamChunk)
  name.vb: Flush2(ByRef BitStreamChunk)
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3(LimeVideoSDKQuickSync.BitStreamChunk@)
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3(LimeVideoSDKQuickSync.BitStreamChunk@)
  id: Flush3(LimeVideoSDKQuickSync.BitStreamChunk@)
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: Flush3(ref BitStreamChunk)
  nameWithType: LowLevelTranscoderCSharp.Flush3(ref BitStreamChunk)
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3(ref LimeVideoSDKQuickSync.BitStreamChunk)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Flush3
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 917
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Get frames during 2nd stage of flushing
  example: []
  syntax:
    content: public bool Flush3(ref BitStreamChunk bitStreamChunk)
    content.vb: Public Function Flush3(ByRef bitStreamChunk As BitStreamChunk) As Boolean
    parameters:
    - id: bitStreamChunk
      type: LimeVideoSDKQuickSync.BitStreamChunk
      description: A single frame
    return:
      type: System.Boolean
      description: true if you should continue to call this method, false if you must go to the next phase.
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3*
  nameWithType.vb: LowLevelTranscoderCSharp.Flush3(ByRef BitStreamChunk)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3(ByRef LimeVideoSDKQuickSync.BitStreamChunk)
  name.vb: Flush3(ByRef BitStreamChunk)
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4(LimeVideoSDKQuickSync.BitStreamChunk@)
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4(LimeVideoSDKQuickSync.BitStreamChunk@)
  id: Flush4(LimeVideoSDKQuickSync.BitStreamChunk@)
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: Flush4(ref BitStreamChunk)
  nameWithType: LowLevelTranscoderCSharp.Flush4(ref BitStreamChunk)
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4(ref LimeVideoSDKQuickSync.BitStreamChunk)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Flush4
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 1000
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: "\n\n"
  example: []
  syntax:
    content: public bool Flush4(ref BitStreamChunk bsc)
    content.vb: Public Function Flush4(ByRef bsc As BitStreamChunk) As Boolean
    parameters:
    - id: bsc
      type: LimeVideoSDKQuickSync.BitStreamChunk
      description: ''
    return:
      type: System.Boolean
      description: true:all done, false:continue to call me
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4*
  nameWithType.vb: LowLevelTranscoderCSharp.Flush4(ByRef BitStreamChunk)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4(ByRef LimeVideoSDKQuickSync.BitStreamChunk)
  name.vb: Flush4(ByRef BitStreamChunk)
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose(System.Boolean)
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: LowLevelTranscoderCSharp.Dispose(Boolean)
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Dispose
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 1034
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Releases unmanaged and - optionally - managed resources.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: <code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Finalize
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Finalize
  id: Finalize
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: LowLevelTranscoderCSharp.Finalize()
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Finalize()
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Finalize
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 1066
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Finalizes an instance of the <xref href="LimeVideoSDKQuickSync.LowLevelTranscoderCSharp" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose
  commentId: M:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose
  id: Dispose
  parent: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: LowLevelTranscoderCSharp.Dispose()
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose()
  type: Method
  source:
    remote:
      path: dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
      branch: master
      repo: https://github.com/cameron-elliott/LimeVideoSDK.git
    id: Dispose
    path: ../dotnet/Class Libraries/LimeVideoSDKQuickSync/LowLevelTranscoderCSharp.cs
    startLine: 1073
  assemblies:
  - LimeVideoSDKQuickSync
  namespace: LimeVideoSDKQuickSync
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: LimeVideoSDKQuickSync.StreamTranscoder
  commentId: T:LimeVideoSDKQuickSync.StreamTranscoder
  isExternal: false
  name: StreamTranscoder
  nameWithType: StreamTranscoder
  fullName: LimeVideoSDKQuickSync.StreamTranscoder
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: LimeVideoSDKQuickSync
  commentId: N:LimeVideoSDKQuickSync
  isExternal: false
  name: LimeVideoSDKQuickSync
  nameWithType: LimeVideoSDKQuickSync
  fullName: LimeVideoSDKQuickSync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: LimeVideoSDKQuickSync.mfxSession
  commentId: T:LimeVideoSDKQuickSync.mfxSession
  parent: LimeVideoSDKQuickSync
  isExternal: false
  name: mfxSession
  nameWithType: mfxSession
  fullName: LimeVideoSDKQuickSync.mfxSession
- uid: System.Collections.Generic.Dictionary{System.String,LimeVideoSDKQuickSync.mfxStatus}
  commentId: T:System.Collections.Generic.Dictionary{System.String,LimeVideoSDKQuickSync.mfxStatus}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, mfxStatus>
  nameWithType: Dictionary<String, mfxStatus>
  fullName: System.Collections.Generic.Dictionary<System.String, LimeVideoSDKQuickSync.mfxStatus>
  nameWithType.vb: Dictionary(Of String, mfxStatus)
  fullname.vb: System.Collections.Generic.Dictionary(Of System.String, LimeVideoSDKQuickSync.mfxStatus)
  name.vb: Dictionary(Of String, mfxStatus)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LimeVideoSDKQuickSync.mfxStatus
    name: mfxStatus
    nameWithType: mfxStatus
    fullName: LimeVideoSDKQuickSync.mfxStatus
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: LimeVideoSDKQuickSync.mfxStatus
    name: mfxStatus
    nameWithType: mfxStatus
    fullName: LimeVideoSDKQuickSync.mfxStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  commentId: T:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
  parent: LimeVideoSDKQuickSync
  isExternal: false
  name: LowLevelTranscoderCSharp
  nameWithType: LowLevelTranscoderCSharp
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.#ctor*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.#ctor
  isExternal: false
  name: LowLevelTranscoderCSharp
  nameWithType: LowLevelTranscoderCSharp.LowLevelTranscoderCSharp
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.LowLevelTranscoderCSharp
- uid: LimeVideoSDKQuickSync.TranscoderConfiguration
  commentId: T:LimeVideoSDKQuickSync.TranscoderConfiguration
  parent: LimeVideoSDKQuickSync
  isExternal: false
  name: TranscoderConfiguration
  nameWithType: TranscoderConfiguration
  fullName: LimeVideoSDKQuickSync.TranscoderConfiguration
- uid: LimeVideoSDKQuickSync.mfxIMPL
  commentId: T:LimeVideoSDKQuickSync.mfxIMPL
  parent: LimeVideoSDKQuickSync
  isExternal: false
  name: mfxIMPL
  nameWithType: mfxIMPL
  fullName: LimeVideoSDKQuickSync.mfxIMPL
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferFreeCount*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferFreeCount
  isExternal: false
  name: BufferFreeCount
  nameWithType: LowLevelTranscoderCSharp.BufferFreeCount
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferFreeCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferSize*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferSize
  isExternal: false
  name: BufferSize
  nameWithType: LowLevelTranscoderCSharp.BufferSize
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.BufferSize
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream
  isExternal: false
  name: PutBitstream
  nameWithType: LowLevelTranscoderCSharp.PutBitstream
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.PutBitstream
- uid: LimeVideoSDKQuickSync.LimeVideoSDKQuickSyncException
  commentId: T:LimeVideoSDKQuickSync.LimeVideoSDKQuickSyncException
  isExternal: false
  name: LimeVideoSDKQuickSyncException
  nameWithType: LimeVideoSDKQuickSyncException
  fullName: LimeVideoSDKQuickSync.LimeVideoSDKQuickSyncException
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame
  isExternal: false
  name: GetNextFrame
  nameWithType: LowLevelTranscoderCSharp.GetNextFrame
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.GetNextFrame
- uid: LimeVideoSDKQuickSync.BitStreamChunk
  commentId: T:LimeVideoSDKQuickSync.BitStreamChunk
  parent: LimeVideoSDKQuickSync
  isExternal: false
  name: BitStreamChunk
  nameWithType: BitStreamChunk
  fullName: LimeVideoSDKQuickSync.BitStreamChunk
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1
  isExternal: false
  name: Flush1
  nameWithType: LowLevelTranscoderCSharp.Flush1
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush1
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2
  isExternal: false
  name: Flush2
  nameWithType: LowLevelTranscoderCSharp.Flush2
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush2
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3
  isExternal: false
  name: Flush3
  nameWithType: LowLevelTranscoderCSharp.Flush3
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush3
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4
  isExternal: false
  name: Flush4
  nameWithType: LowLevelTranscoderCSharp.Flush4
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Flush4
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose
  isExternal: false
  name: Dispose
  nameWithType: LowLevelTranscoderCSharp.Dispose
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Dispose
- uid: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Finalize*
  commentId: Overload:LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Finalize
  isExternal: false
  name: Finalize
  nameWithType: LowLevelTranscoderCSharp.Finalize
  fullName: LimeVideoSDKQuickSync.LowLevelTranscoderCSharp.Finalize
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
